;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(shell-command-history minibuffer-history-search-history consult--find-history consult--grep-history consult--buffer-history extended-command-history command-history ivy-history swiper-history read-expression-history pdf-annot-color-history buffer-name-history minibuffer-history TeX-command-history counsel-M-x-history file-name-history))
(setq shell-command-history '("/bin/zsh"))
(setq consult--find-history '("#"))
(setq consult--grep-history '("#"))
(setq extended-command-history '("kill-buffer" "term" "eval-buffer" "popper-toggle-type" "eval-buffer" "popper-cycle" "popper-toggle" "eval-buffer" "indent-region" "popper-kill-latest-popup" "eval-buffer" "treemacs" "eval-buffer" "popper-kill-latest-popup" "eval-buffer" "popper-kill-latest-popup" "eval-buffer"))
(setq command-history '((kill-buffer "*Warnings*") (kill-buffer "*Messages*") (execute-extended-command nil "kill-buffer") (kill-buffer "*Messages*") (execute-extended-command nil "kill-buffer" "kill-bu") (term "/bin/zsh") (execute-extended-command nil "term" "ter") (eval-buffer) (execute-extended-command nil "eval-buffer" "ev") (popper-toggle-type) (execute-extended-command nil "popper-toggle-type") (popper-toggle-type) (execute-extended-command nil "popper-toggle-type" "popper") (eval-buffer) (execute-extended-command nil "eval-buffer") (eval-buffer) (execute-extended-command nil "eval-buffer") (eval-buffer) (execute-extended-command nil "eval-buffer" "e") (eval-buffer) (execute-extended-command nil "eval-buffer" "ev") (popper-cycle 1) (execute-extended-command nil "popper-cycle" "popp") (popper-toggle 1) (execute-extended-command nil "popper-toggle" "popper")))
(setq ivy-history '(#("elisp" 0 5 (ivy-index 11)) #("init.el" 0 7 (ivy-index 2)) #("json" 0 4 (ivy-index 0)) #("python" 0 6 (ivy-index 0))))
(setq swiper-history '("`"))
(setq read-expression-history '("(functionp 'module-load)"))
(setq buffer-name-history '("*Warnings*" "*Messages*" #("*compilation*" 0 13 (ivy-index 0))))
(setq minibuffer-history '("Remove the project from the project list" "https://github.com/tree-sitter/tree-sitter-python" "TeX-pdf-tools-sync-view" "open Emre\\ Cebi\\ New\\ CV.pdf"))
(setq TeX-command-history '(#("View" 0 4 (ivy-index 3 idx 3)) #("LaTeX" 0 5 (ivy-index 0 idx 0))))
(setq counsel-M-x-history '(#("popp" 0 4 (ivy-index 6)) "popper-kill-latest-popup" #("e" 0 1 (ivy-index 0)) #("eval-buffer" 0 11 (ivy-index 0)) #("ev" 0 2 (ivy-index 0)) #("treesit" 0 7 (ivy-index 3)) "treesit-inspect-mode" #("treesit-install-language-grammar" 0 32 (ivy-index 2)) #("json-" 0 5 (ivy-index 2)) "json-ts-mode" "treesit-explore-mode" #("python" 0 6 (ivy-index 0)) #("vertico-mode" 0 12 (ivy-index 0)) #("vertico" 0 7 (ivy-index 1)) #("eva" 0 3 (ivy-index 0)) #("tab mode" 0 8 (ivy-index 0)) "tab-bar-mode" #("rain" 0 4 (ivy-index 0)) "rainbow-delimiters-mode" #("package up" 0 10 (ivy-index 5)) "package-upgrade-all" "package-upgrade" #("package ref" 0 11 (ivy-index 0)) "package-refresh-contents"))
(setq file-name-history '("~/.emacs.d/init.el" #("/Users/emrecebi/.emacs.d/init.el" 0 32 (ivy-index 0)) #("/Users/emrecebi/Documents/Homeworks/SD/SD Repo/testdata1/appData.json" 0 69 (ivy-index 2)) #("/Users/emrecebi/.dotfiles/macos/.emacs.d/" 0 41 (ivy-index 0)) #("/Users/emrecebi/.dotfiles/macos/.emacs.d/early-init.el" 0 54 (ivy-index 0)) #("/Users/emrecebi/Documents/General Documents/CV/Emre Cebi New CV.tex" 0 67 (ivy-index 13)) #("/Users/emrecebi/Documents/" 0 26 (ivy-index 0))))
